{"ast":null,"code":"var _jsxFileName = \"/Users/shivampatel/Desktop/knowledge-graph-search-engine/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const handleSearch = () => {\n    fetch('/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: query\n      })\n    }).then(response => response.json()).then(data => setResults(data.entities));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Knowledge Graph Search Engine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Enter your query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: results.map((entity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [entity[0], \" (\", entity[1], \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kZM7FOZerLi1RvZykWYa8gktm94=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","query","setQuery","results","setResults","handleSearch","fetch","method","headers","body","JSON","stringify","text","then","response","json","data","entities","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","entity","index","_c","$RefreshReg$"],"sources":["/Users/shivampatel/Desktop/knowledge-graph-search-engine/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport './styles.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n\n  const handleSearch = () => {\n    fetch('/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ text: query }),\n    })\n      .then(response => response.json())\n      .then(data => setResults(data.entities));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Knowledge Graph Search Engine</h1>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          placeholder=\"Enter your query\"\n        />\n        <button onClick={handleSearch}>Search</button>\n        <ul>\n          {results.map((entity, index) => (\n            <li key={index}>{entity[0]} ({entity[1]})</li>\n          ))}\n        </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBC,KAAK,CAAC,SAAS,EAAE;MACfC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEX;MAAM,CAAC;IACtC,CAAC,CAAC,CACCY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIZ,UAAU,CAACY,IAAI,CAACC,QAAQ,CAAC,CAAC;EAC5C,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBrB,OAAA;MAAQoB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BrB,OAAA;QAAAqB,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCzB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAExB,KAAM;QACbyB,QAAQ,EAAEC,CAAC,IAAIzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACxCI,WAAW,EAAC;MAAkB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFzB,OAAA;QAAQgC,OAAO,EAAEzB,YAAa;QAAAc,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CzB,OAAA;QAAAqB,QAAA,EACGhB,OAAO,CAAC4B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBnC,OAAA;UAAAqB,QAAA,GAAiBa,MAAM,CAAC,CAAC,CAAC,EAAC,IAAE,EAACA,MAAM,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA,GAAhCC,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACvB,EAAA,CAnCQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}